###############################################################################
# Copyright (c) 2025 Red Hat Inc. and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v2.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v20.html
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#     Red Hat Inc. - initial API and implementation
###############################################################################

## Language Servers UI settings page
language.servers=语言服务器

language.server.tab.server=服务器
language.server.serverName=名称：
language.server.command=命令：

language.server.tab.mappings=映射
language.server.command.emptyText=定义启动语言服务器的命令
language.server.mappings.title=与语言服务器的文件关联
language.server.mappings.language=语言
language.server.mappings.language.column=语言
language.server.mappings.language.no=未配置语言映射
language.server.mappings.fileType=文件类型
language.server.mappings.fileType.column=文件类型
language.server.mappings.fileType.no=未配置文件类型映射
language.server.mappings.fileNamePattern=文件名模式
language.server.mappings.fileNamePattern.column=文件名模式
language.server.mappings.fileNamePattern.no=未配置文件名模式映射
language.server.mappings.languageId.column=语言ID

language.server.tab.configuration=配置
language.server.tab.configuration.server=服务器
language.server.tab.configuration.client=客户端
language.server.configuration=配置：
language.server.initializationOptions=初始化选项：
language.server.configuration.json.schema.associate=关联到JSON Schema
language.server.configuration.json.schema.edit=编辑JSON Schema

language.server.tab.debug=调试
language.server.error.reporting=错误报告：
language.server.error.reporting.none=无
language.server.error.reporting.as_notification=作为通知
language.server.error.reporting.in_log=在日志中
language.server.error.reporting.context.help.tooltip=报告语言服务器中的技术错误。<br/>\
  你可以配置错误报告：<br/><ul>\
  <li>无：忽略语言服务器错误。</li>\
  <li>作为通知：语言服务器错误将作为通知出现。</li>\
  <li>在日志中：语言服务器错误将记录在IntelliJ标准日志中。</li></ul>
language.server.error.reporting.context.help.link=详见LSP规范
action.language.server.error.reporting.disable.text=禁用错误报告
action.language.server.error.reporting.in_log.text=在日志中报告错误
action.open.website.text=打开LSP4IJ文档
action.language.server.error.show.logs.text=显示日志

language.server.trace=跟踪：
language.server.debug.port=调试端口：
language.server.debug.suspend=挂起并等待调试器？

language.server.action.add=添加语言服务器
language.server.action.remove=移除所选语言服务器

## New Language Server dialog
new.language.server.dialog.title=新建语言服务器
new.language.server.dialog.template=模板：
new.language.server.dialog.export.template.title=加载模板
new.language.server.dialog.export.template.description=从目录加载模板
new.language.server.dialog.import.template.error.title=模板导入失败
new.language.server.dialog.import.template.error.description=导入语言服务器模板失败
new.language.server.dialog.import.template.selection=从自定义模板导入...
new.language.server.dialog.validation.serverName.must.be.set=必须设置服务器名称
new.language.server.dialog.validation.commandLine.must.be.set=必须设置命令

## Edit JSON Schema dialog
edit.json.schema.dialog.title=编辑JSON Schema
edit.json.schema.dialog.schema=JSON Schema

## LSP console
lsp.console.title=LSP控制台
lsp.console.tabs.traces.title=跟踪
lsp.console.tabs.logs.title=日志
action.lsp.console.explorer.restart.text=重启
action.lsp.console.explorer.restart.description=重启语言服务器
action.lsp.console.explorer.stop.text=停止
action.lsp.console.explorer.stop.description=停止并禁用语言服务器
action.lsp.console.explorer.pause.text=暂停
action.lsp.console.explorer.pause.description=暂停语言服务器
action.lsp.console.explorer.copy.command.text=复制启动命令
action.lsp.console.explorer.copy.command.description=复制启动语言服务器的命令
action.lsp.console.explorer.delete.server.text=删除服务器
action.lsp.console.explorer.delete.server.description=删除所选语言服务器
action.lsp.console.explorer.delete.server.confirm.dialog.title=删除语言服务器？
action.lsp.console.explorer.delete.server.confirm.dialog.message=是否要删除此"{0}"语言服务器？
action.lsp.console.explorer.edit.server.text=编辑服务器
action.lsp.console.explorer.edit.server.description=编辑所选语言服务器
action.lsp.console.explorer.export.server.text=导出服务器
action.lsp.console.explorer.export.server.description=导出所选语言服务器
action.lsp.console.explorer.export.servers.text=导出服务器
action.lsp.console.explorer.export.servers.description=导出所选语言服务器
action.lsp.console.explorer.export.servers.zip.save.title=保存LS定义
action.lsp.console.explorer.export.servers.zip.save.description=选择LS定义导出的保存位置
action.lsp.console.explorer.export.servers.notification.title=LSP4IJ语言服务器导出
action.lsp.console.explorer.export.servers.notification.message.error=语言服务器导出失败
action.lsp.console.explorer.export.servers.notification.message.single=成功导出1个语言服务器。
action.lsp.console.explorer.export.servers.notification.message.multi=成功导出{0}个语言服务器。
action.lsp.console.folding.text=全部折叠/展开
action.lsp.console.new.language.server.text=新建语言服务器
action.lsp.console.new.language.server.description=打开对话框以创建新语言服务器
action.lsp.detail.apply.text=应用
action.lsp.detail.apply.description=应用此语言服务器设置的更改
action.lsp.detail.apply.balloon=点击此处保存设置
action.lsp.detail.apply.balloon.disable=知道了
action.lsp.detail.reset.text=重置
action.lsp.detail.reset.description=回滚此语言服务器设置的更改
## Dialog
lsp.create.file.confirm.dialog.title=创建文件？
lsp.create.file.confirm.dialog.message=无法打开文件"{0}"。是否要创建？
lsp.create.file.error.dialog.title=创建文件问题
lsp.create.file.error.dialog.message=创建文件"{0}"时出错："{1}"。

# Language server template
template.show.instruction.dialog.title="{0}"的说明

# Find Usages
usage.description=LSP符号
usage.type.declarations=声明
usage.type.definitions=定义
usage.type.typeDefinitions=类型定义
usage.type.references=引用
usage.type.implementations=实现

no.usage.type.declarations=未找到声明。
no.usage.type.typeDefinitions=未找到类型定义。
no.usage.type.references=未找到引用。
no.usage.type.implementations=未找到实现。

# Type declaration provider
goto.typeDeclaration.notFound=未找到类型声明

# LSP CodeLens (based on CodeVision)
codeLens.group.name=LSP代码透镜
codeLens.group.description=显示与文件关联的语言服务器收集的LSP代码透镜。

# LSP Intention
lsp.intention.group.name=语言服务器
lsp.intention.code.action.kind.quickfix=快速修复
lsp.intention.code.action.kind.refactor=重构
lsp.intention.code.action.kind.refactor.extract=提取
lsp.intention.code.action.kind.refactor.inline=内联
lsp.intention.code.action.kind.refactor.rewrite=重写
lsp.intention.code.action.kind.source=源
lsp.intention.code.action.kind.source.fixAll=全部修复
lsp.intention.code.action.kind.source.organizeImports=整理导入
lsp.intention.code.action.kind.empty=空

# LSP Rename
lsp.refactor.rename.symbol.dialog.title=将"{0}"符号重命名为：
lsp.refactor.rename.symbol.handler.title=重命名LSP符号
lsp.refactor.rename.cannot.be.renamed.error=该元素无法重命名。
lsp.refactor.rename.prepare.progress.title=为"{0}"文件在{1}偏移量准备重命名...
lsp.refactor.rename.progress.title=正在将"{0}"文件重命名为"{1}"...

# LSP Command
lsp.command.error.title=无法执行"{0}"命令。
lsp.command.error.with.ls.content=缺少"{0}"命令！它被"{1}"引用。需要由[IntelliJ插件](https://github.com/redhat-developer/lsp4ij/blob/main/docs/DeveloperGuide.md#lsp-commands)贡献。
lsp.command.error.without.ls.content=缺少"{0}"命令！需要由[IntelliJ插件](https://github.com/redhat-developer/lsp4ij/blob/main/docs/DeveloperGuide.md#lsp-commands)贡献。
lsp.command.error.ls.undefined.title=未定义语言服务器
lsp.command.error.ls.undefined.content=无法执行语言服务器"{0}"命令。ID为"{1}"的语言服务器不存在。

# LSP colors used by LSP semanticTokens
options.lsp.attribute.descriptor.namespace.declaration=命名空间//命名空间声明
options.lsp.attribute.descriptor.namespace=命名空间//命名空间
options.lsp.attribute.descriptor.class.declaration=类//类声明
options.lsp.attribute.descriptor.class.reference=类//类引用
options.lsp.attribute.descriptor.enum=枚举
options.lsp.attribute.descriptor.interface=接口
options.lsp.attribute.descriptor.struct=结构体类型
options.lsp.attribute.descriptor.typeParameter=类型参数
options.lsp.attribute.descriptor.type=类型
options.lsp.attribute.descriptor.parameter=参数
options.lsp.attribute.descriptor.variable.static=变量//静态变量
options.lsp.attribute.descriptor.variable.readonly.static=变量//静态只读变量
options.lsp.attribute.descriptor.variable.readonly=变量//只读变量
options.lsp.attribute.descriptor.variable=变量//变量
options.lsp.attribute.descriptor.property.static=属性//静态属性
options.lsp.attribute.descriptor.property.static.readonly=属性//静态只读属性
options.lsp.attribute.descriptor.property=属性//属性
options.lsp.attribute.descriptor.property.readonly=属性//只读属性
options.lsp.attribute.descriptor.enum.member=枚举成员
options.lsp.attribute.descriptor.decorator=装饰器
options.lsp.attribute.descriptor.event=事件
options.lsp.attribute.descriptor.function.call=函数//函数调用
options.lsp.attribute.descriptor.function.declaration=函数//函数声明
options.lsp.attribute.descriptor.function.defaultLibrary=函数//默认库
options.lsp.attribute.descriptor.method.call=方法//方法调用
options.lsp.attribute.descriptor.method.declaration=方法//方法声明
options.lsp.attribute.descriptor.method.static=方法//静态方法
options.lsp.attribute.descriptor.macro=宏
options.lsp.attribute.descriptor.label=标签
options.lsp.attribute.descriptor.comment=注释
options.lsp.attribute.descriptor.string=字符串
options.lsp.attribute.descriptor.keyword=关键字
options.lsp.attribute.descriptor.number=数字
options.lsp.attribute.descriptor.regexp=正则表达式
options.lsp.attribute.descriptor.modifier=修饰符
options.lsp.attribute.descriptor.operator=操作符

# Semantic Tokens
lsp.semantic.tokens.inspector.title=语义标记检查器
lsp.semantic.tokens.inspector.show.text.attributes=显示文本属性
lsp.semantic.tokens.inspector.show.token.type=显示标记类型
lsp.semantic.tokens.inspector.show.token.modifiers=显示标记修饰符
lsp.semantic.tokens.color.settings.name=语言服务器

# LSP GoTo actions
lsp.goto.declaration.progress.title=查找"{0}"在"{1}"的声明
lsp.goto.implementation.progress.title=查找"{0}"在"{1}"的实现
lsp.goto.reference.progress.title=查找"{0}"在"{1}"的类型引用
lsp.goto.typeDefinition.progress.title=查找"{0}"在"{1}"的类型定义

# Inlay hints
lsp.hints.declarative.provider.name=语言服务器

# Server installer
server.installer.task.installing=如有需要正在安装服务器...
server.installer.progress.check.installed=正在检查服务器是否已安装...
server.installer.progress.installing=正在安装服务器...
server.installer.lsp.task.installing=如有需要正在安装"{0}"服务器...
server.installer.lsp.progress.check.installed=正在检查"{0}"服务器是否已安装...
server.installer.lsp.progress.installing=正在安装"{0}"服务器... 