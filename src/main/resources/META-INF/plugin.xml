<idea-plugin>
    <id>com.redhat.devtools.lsp4ij</id>
    <name>LSP4IJ</name>
    <version>1.0</version>
    <vendor email="developers@redhat.com" url="https://github.com/redhat-developer/lsp4ij/issues">Red-Hat</vendor>

    <change-notes><![CDATA[
    <h3>0.8.1</h3>
    <ul>
      <li>Remove using internal API ProjectIndexingActivityHistoryListener</li>
      <li>JSON support for configuring user-defined language servers</li>
      <li>Fixing bugs</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/9?closed=1">changelog</a>.

    <h3>0.8.0</h3>
    <ul>
      <li>Support for <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/LSPSupport.md#call-hierarchy">Call Hierarchy</a></li>
      <li>Support for <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/LSPSupport.md#type-hierarchy">Type Hierarchy</a></li>
      <li>Starting the language servers after all projects are indexed to ensure very good performance of the IntelliJ startup</li>
      <li>Fixing bugs</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/8?closed=1">changelog</a>.

    <h3>0.7.0</h3>
    <ul>
      <li>Support for documentSelector in <a href="https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#client_registerCapability">registerCapability</a></li>
      <li>Provide the <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/LSPApi.md">LSP client features API</a></li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/7?closed=1">changelog</a>.

    <h3>0.6.0</h3>
    <ul>
      <li>Support for textDocument/documentSymbol</li>
      <li>Provide a new way to connect to a language server with <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/DeveloperGuide.md#osprocessstreamconnectionprovider">OSProcessStreamConnectionProvider</a></li>
      <li>Fixing bugs</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/6?closed=1">changelog</a>.

    <h3>0.5.0</h3>
    <ul>
      <li>Fixing bugs</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/5?closed=1">changelog</a>.

    <h3>0.4.0</h3>
    <ul>
      <li>Support for workspace/symbol</li>
      <li>Fixing bugs</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/4?closed=1">changelog</a>.

    <h3>0.3.0</h3>
    <ul>
      <li>Support for textDocument/semanticTokens</li>
      <li>Support file link in hover</li>
      <li>Improve performance</li>
      <li>Fixing bugs</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/3?closed=1">changelog</a>.

    <h3>0.0.2</h3>
    <ul>
      <li>Provide an API to enable/disable & start/stop language server</li>
      <li>Support for syntax coloration for Markdown code block and indented blockquote on hover, completion documentation.</li>
      <li>Support 'deprecated'/'unnecessary' diagnostic tags</li>
      <li>Support for LSP 'workspace/configuration'</li>
      <li>Support for triggered chars in LSP completion support</li>
      <li>Support for labelDetails in completion</li>
      <li>Display platform file icons on completion</li>
      <li>Provides menu for LSP implementation/references/declaration/type definition</li>
      <li>Export user defined language server</li>
      <li>Support Macros in the start LS command</li>
      <li>Improve performance</li>
      <li>Fixing bugs</li>
    </ul>
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/2?closed=1">changelog</a>.

    <h3>0.0.1</h3>
    <ul>
      <li>Initial release</li>
    </ul>    
    Learn more in the <a href="https://github.com/redhat-developer/lsp4ij/milestone/1?closed=1">changelog</a>.

  ]]>
    </change-notes>
    <description>
        <![CDATA[
    <p>
        <a href="https://github.com/redhat-developer/lsp4ij">LSP4IJ</a>
        is a free and open-source <a href="https://microsoft.github.io/language-server-protocol/">Language Server
        protocol (LSP)
    </a> client compatible with all flavors of IntelliJ.
    </p>

    <p>It allows you to integrate any <code>language server</code> that communicates with its client via <code>stdio</code>:
    </p>
    <ul>
        <li>by <code>developing an IntelliJ plugin</code> with LSP <code>extension points</code>:
            <ul>
                <li>
                    <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/DeveloperGuide.md#declare-server-with-extension-point">
                        com.redhat.devtools.lsp4ij.server
                    </a>
                    extension point to define a language server.
                </li>
                <li>
                    <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/DeveloperGuide.md#declare-language-mapping-with-extension-point">
                        com.redhat.devtools.lsp4ij.languageMapping
                    </a>
                    to associate an IntelliJ language with a language server definition.
                </li>
            </ul>
        </li>
        <li>by manually adding <a
                href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserDefinedLanguageServer.md">language
            server definitions</a>, supporting custom server settings. This approach doesn't require developing a
            specific IntelliJ plugin.
        </li>
    </ul>

    <p>LSP4IJ also provides:</p>
    <ul>
        <li>An <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserGuide.md#lsp-console">LSP Consoles
            view
        </a> to track LSP requests, responses, and notifications in a console.
        </li>
        <li>A <a
                href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserGuide.md#language-servers-preferences">
            Language Servers preferences page
        </a> to configure the LSP trace level and the debug port to use to debug the language server.
        </li>
    </ul>

    <p>You can find more documentation in:
        <ul>
            <li>
                <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/DeveloperGuide.md">the developer guide
                </a>,
                providing step-by-step instructions on how to integrate a language server in LSP4IJ, in an external IntelliJ plugin.
            </li>
            <li>
                <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserDefinedLanguageServer.md">the User-defined language server documentation
                </a>, explaining how to integrate a language server in LSP4IJ with a few settings.
            </li>
            <li>
                <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/UserGuide.md">the user guide</a>, explaining how to use the
                 LSP console and Language Server preferences.
            </li>
            <li>
                <a href="https://github.com/redhat-developer/lsp4ij/blob/main/docs/LSPSupport.md">the LSP Support overview</a>, describing which LSP features are implemented, and how.
            </li>
        </ul>
    </p>
    ]]>
    </description>

    <depends>com.intellij.modules.platform</depends>
    <depends optional="true">org.jetbrains.plugins.textmate</depends>
    <depends optional="true">com.redhat.devtools.intellij.telemetry</depends>
    <depends optional="true" config-file="plugin-json.xml">com.intellij.modules.json</depends>
    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="232.*"/>

    <!-- LSP extension points -->
    <extensionPoints>

        <!-- Language server extension point -->
        <extensionPoint
                name="server"
                beanClass="com.redhat.devtools.lsp4ij.server.definition.extension.ServerExtensionPointBean">
            <with attribute="factoryClass" implements="com.redhat.devtools.lsp4ij.LanguageServerFactory"/>
        </extensionPoint>

        <!-- Language server mappings extension point -->
        <extensionPoint
                name="languageMapping"
                beanClass="com.redhat.devtools.lsp4ij.server.definition.extension.LanguageMappingExtensionPointBean">
            <with attribute="documentMatcher" implements="com.redhat.devtools.lsp4ij.DocumentMatcher"/>
        </extensionPoint>
        <extensionPoint
                name="fileTypeMapping"
                beanClass="com.redhat.devtools.lsp4ij.server.definition.extension.FileTypeMappingExtensionPointBean">
            <with attribute="documentMatcher" implements="com.redhat.devtools.lsp4ij.DocumentMatcher"/>
        </extensionPoint>
        <extensionPoint
                name="fileNamePatternMapping"
                beanClass="com.redhat.devtools.lsp4ij.server.definition.extension.FileNamePatternMappingExtensionPointBean">
            <with attribute="documentMatcher" implements="com.redhat.devtools.lsp4ij.DocumentMatcher"/>
        </extensionPoint>

        <!-- Semantic tokens colors provider extension point -->
        <extensionPoint
                name="semanticTokensColorsProvider"
                beanClass="com.redhat.devtools.lsp4ij.server.definition.extension.SemanticTokensColorsProviderExtensionPointBean">
            <with attribute="class"
                  implements="com.redhat.devtools.lsp4ij.features.semanticTokens.SemanticTokensColorsProvider"/>
        </extensionPoint>

    </extensionPoints>

    <!-- Language Server support -->
    <extensions defaultExtensionNs="com.intellij">
        <backgroundPostStartupActivity implementation="com.redhat.devtools.lsp4ij.internal.LSPPostStartupActivity"/>
        <!-- LSP application services -->
        <applicationService
                serviceImplementation="com.redhat.devtools.lsp4ij.client.indexing.ProjectIndexingDumbAndScanningStrategy"/>
        <applicationService
                serviceImplementation="com.redhat.devtools.lsp4ij.internal.telemetry.TelemetryManager"/>
        <applicationService
                serviceImplementation="com.redhat.devtools.lsp4ij.LanguageServersRegistry"/>
        <applicationService
                id="com.redhat.devtools.lsp4ij.launching.UserDefinedLanguageServerSettings"
                serviceImplementation="com.redhat.devtools.lsp4ij.launching.UserDefinedLanguageServerSettings"/>
        <applicationService
                id="com.redhat.devtools.lsp4ij.launching.templates.LanguageServerTemplateManager"
                serviceImplementation="com.redhat.devtools.lsp4ij.launching.templates.LanguageServerTemplateManager"/>

        <!-- LSP project services -->
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.client.indexing.ProjectIndexingManager"/>
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.LanguageServerManager"/>
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.internal.editor.EditorFeatureManager"/>
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.LanguageServiceAccessor"/>
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.lifecycle.LanguageServerLifecycleManager"/>
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.usages.LSPUsagesManager"/>
        <projectService
                serviceImplementation="com.redhat.devtools.lsp4ij.features.documentation.MarkdownConverter"/>

        <!-- LSP textDocument/publishDiagnostics notification support -->
        <externalAnnotator
                id="LSPDiagnosticAnnotator"
                language=""
                implementationClass="com.redhat.devtools.lsp4ij.features.diagnostics.LSPDiagnosticAnnotator"/>

        <!-- LSP textDocument/completion request support -->
        <typedHandler id="LSPTypedHandlerDelegate"
                      order="last"
                      implementation="com.redhat.devtools.lsp4ij.features.completion.LSPTypedHandlerDelegate"/>
        <completion.contributor
                id="LSPCompletionContributor"
                language="any"
                implementationClass="com.redhat.devtools.lsp4ij.features.completion.LSPCompletionContributor"
                order="first, before wordCompletion"/>

        <!-- LSP textDocument/definition request support -->
        <gotoDeclarationHandler
                id="LSPGotoDeclarationHandler"
                implementation="com.redhat.devtools.lsp4ij.features.navigation.LSPGotoDeclarationHandler"/>

        <!-- LSP textDocument/documentLink request support -->
        <externalAnnotator
                id="LSPDocumentLinkAnnotator"
                language=""
                implementationClass="com.redhat.devtools.lsp4ij.features.documentLink.LSPDocumentLinkAnnotator"/>
        <gotoDeclarationHandler
                id="LSPDocumentLinkGotoDeclarationHandler"
                implementation="com.redhat.devtools.lsp4ij.features.documentLink.LSPDocumentLinkGotoDeclarationHandler"/>

        <!-- LSP textDocument/documentSymbol request support -->
        <lang.psiStructureViewFactory
                id="LSPDocumentSymbolStructureViewFactoryForText"
                language="TEXT"
                implementationClass="com.redhat.devtools.lsp4ij.features.documentSymbol.LSPDocumentSymbolStructureViewFactory"/>
        <lang.psiStructureViewFactory
                id="LSPDocumentSymbolStructureViewFactoryForTextMate"
                language="textmate"
                implementationClass="com.redhat.devtools.lsp4ij.features.documentSymbol.LSPDocumentSymbolStructureViewFactory"/>

        <!-- LSP textDocument/documentHighlight request support -->
        <highlightUsagesHandlerFactory
                id="LSPHighlightUsagesHandlerFactory"
                implementation="com.redhat.devtools.lsp4ij.features.highlight.LSPHighlightUsagesHandlerFactory"/>

        <!-- LSP textDocument/codeLens request support -->
        <codeInsight.codeVisionProviderFactory
                implementation="com.redhat.devtools.lsp4ij.features.codeLens.DummyCodeVisionProviderFactory"/>
        <config.codeVisionGroupSettingProvider
                implementation="com.redhat.devtools.lsp4ij.features.codeLens.LSPCodeLensSettingsProvider"/>
        <codeInsight.codeVisionProvider
                id="LSPCodeLensProvider"
                implementation="com.redhat.devtools.lsp4ij.features.codeLens.LSPCodeLensProvider"/>

        <!-- LSP textDocument/inlayHint + textDocument/colorInformation requests support -->
        <codeInsight.inlayProviderFactory
                id="LSPInlayHintProvidersFactory"
                implementation="com.redhat.devtools.lsp4ij.features.LSPInlayHintProvidersFactory"/>

        <!-- LSP textDocument/hover request support -->
        <platform.backend.documentation.targetProvider
                id="LSPDocumentationTargetProvider"
                implementation="com.redhat.devtools.lsp4ij.features.documentation.LSPDocumentationTargetProvider"
                order="first"/>
        <platform.backend.documentation.linkHandler
                id="LSPDocumentationLinkHandler"
                implementation="com.redhat.devtools.lsp4ij.features.documentation.LSPDocumentationLinkHandler"/>

        <!-- LSP textDocument/folding -->
        <lang.foldingBuilder id="LSPFoldingBuilderForText"
                             language="TEXT"
                             implementationClass="com.redhat.devtools.lsp4ij.features.foldingRange.LSPFoldingRangeBuilder"
                             order="first"/>

        <lang.foldingBuilder id="LSPFoldingBuilderForTextMate"
                             language="textmate"
                             implementationClass="com.redhat.devtools.lsp4ij.features.foldingRange.LSPFoldingRangeBuilder"
                             order="first"/>

        <!-- LSP textDocument/signatureHelp -->
        <codeInsight.parameterInfo
                id="LSPParameterInfoHandlerForTEXT"
                language="TEXT"
                implementationClass="com.redhat.devtools.lsp4ij.features.signatureHelp.LSPParameterInfoHandler"/>

        <codeInsight.parameterInfo
                id="LSPParameterInfoHandlerForTextMate"
                language="textmate"
                implementationClass="com.redhat.devtools.lsp4ij.features.signatureHelp.LSPParameterInfoHandler"/>

        <!-- LSP textDocument/formatting + textDocument/rangeFormatting request support -->
        <formattingService
                id="LSPFormattingOnlyService"
                implementation="com.redhat.devtools.lsp4ij.features.formatting.LSPFormattingOnlyService"/>
        <formattingService
                id="LSPFormattingAndRangeBothService"
                implementation="com.redhat.devtools.lsp4ij.features.formatting.LSPFormattingAndRangeBothService"/>

        <!-- LSP textDocument/semanticTokens request support -->
        <highlightVisitor
                id="LSPSemanticTokensHighlightVisitor"
                implementation="com.redhat.devtools.lsp4ij.features.semanticTokens.LSPSemanticTokensHighlightVisitor"/>
        <colorSettingsPage
                implementation="com.redhat.devtools.lsp4ij.features.semanticTokens.SemanticTokensColorSettingsPage"/>

        <!-- LSP textDocument/prepareTypeHierarchy request support -->
        <typeHierarchyProvider
                language="TEXT"
                implementationClass="com.redhat.devtools.lsp4ij.features.typeHierarchy.LSPTypeHierarchyProvider" />
        <typeHierarchyProvider
                language="textmate"
                implementationClass="com.redhat.devtools.lsp4ij.features.typeHierarchy.LSPTypeHierarchyProvider" />

        <!-- LSP textDocument/callHierarchy request support -->
        <callHierarchyProvider
                language="TEXT"
                implementationClass="com.redhat.devtools.lsp4ij.features.callHierarchy.LSPCallHierarchyProvider" />
        <callHierarchyProvider
                language="textmate"
                implementationClass="com.redhat.devtools.lsp4ij.features.callHierarchy.LSPCallHierarchyProvider" />

        <!-- LSP Find Usages (LSP) support shows:
             - textDocument/declaration
             - textDocument/definition
             - textDocument/typeDefinition
             - textDocument/references
             - textDocument/implementation
        -->
        <elementDescriptionProvider
                implementation="com.redhat.devtools.lsp4ij.usages.LSPUsageElementDescriptionProvider"/>
        <customUsageSearcher
                order="last"
                implementation="com.redhat.devtools.lsp4ij.usages.LSPUsageSearcher"/>
        <usageTargetProvider
                order="last"
                implementation="com.redhat.devtools.lsp4ij.usages.LSPUsageTargetProvider"/>
        <findUsagesHandlerFactory
                order="last, before default"
                implementation="com.redhat.devtools.lsp4ij.usages.LSPFindUsagesHandlerFactory"/>
        <usageTypeProvider
                order="last"
                implementation="com.redhat.devtools.lsp4ij.usages.LSPUsageTypeProvider"/>

        <!-- LSP workspace/symbol request support -->
        <gotoClassContributor id="LSPWorkspaceGotoClassContributor"
                              implementation="com.redhat.devtools.lsp4ij.features.workspaceSymbol.LSPWorkspaceGotoClassContributor"/>
        <gotoSymbolContributor id="LSPWorkspaceGotoSymbolContributor"
                               implementation="com.redhat.devtools.lsp4ij.features.workspaceSymbol.LSPWorkspaceGotoSymbolContributor"/>

        <!-- LSP textDocument/rename request support -->
        <renameHandler
                id="LSPRenameHandler"
                implementation="com.redhat.devtools.lsp4ij.features.rename.LSPRenameHandler"
                order="first"/>

        <!-- willRenameFiles support -->
        <renamePsiElementProcessor
                implementation="com.redhat.devtools.lsp4ij.features.refactoring.LSPRenamePsiElementProcessor"
                order="last"/>

        <!-- Code Action support-->
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction0</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction1</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction2</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction3</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction4</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction5</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction6</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction7</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction8</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction9</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction10</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction11</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction12</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction13</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction14</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction15</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction16</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction17</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction18</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>
        <intentionAction>
            <bundleName>messages.LanguageServerBundle</bundleName>
            <className>com.redhat.devtools.lsp4ij.features.codeAction.intention.LSPIntentionAction19</className>
            <categoryKey>lsp.intention.group.name</categoryKey>
            <language/>
        </intentionAction>

        <notificationGroup
                id="LSP/window/showMessage"
                displayType="BALLOON"/>

        <notificationGroup
                id="LSP/window/showMessageRequest"
                displayType="STICKY_BALLOON"/>

        <notificationGroup
                id="LSP4IJ general notifications"
                displayType="BALLOON"/>
    </extensions>

    <!-- Actions to execute LSP features Find Implementation, etc -->
    <actions>

        <action id="LSP.GotoDeclaration"
                class="com.redhat.devtools.lsp4ij.features.declaration.LSPGoToDeclarationAction"
                text="LSP Declaration(s)"
                description="Find all declarations of the element at cursor if any.">
            <keyboard-shortcut first-keystroke="control alt Z" keymap="$default"/>
        </action>
        <action id="LSP.GotoTypeDefinition"
                class="com.redhat.devtools.lsp4ij.features.typeDefinition.LSPGoToTypeDefinitionAction"
                text="LSP Type Definition(s)"
                description="Find all type definitions of the element at cursor if any.">
            <keyboard-shortcut first-keystroke="control alt E" keymap="$default"/>
        </action>
        <action id="LSP.GotoImplementation"
                class="com.redhat.devtools.lsp4ij.features.implementation.LSPGoToImplementationAction"
                text="LSP Implementation(s)"
                description="Find all implementations of the element at cursor if any.">
            <keyboard-shortcut first-keystroke="control alt G" keymap="$default"/>
        </action>
        <action id="LSP.GotoReference"
                class="com.redhat.devtools.lsp4ij.features.references.LSPGoToReferenceAction"
                text="LSP Reference(s)"
                description="Find all references of the element at cursor if any.">
            <keyboard-shortcut first-keystroke="control alt H" keymap="$default"/>
        </action>

        <group>
            <add-to-group group-id="EditorPopupMenu.GoTo" anchor="first"/>
            <add-to-group group-id="GoToMenu" anchor="before" relative-to-action="GotoDeclaration"/>
            <reference ref="LSP.GotoImplementation"/>
            <reference ref="LSP.GotoReference"/>
            <reference ref="LSP.GotoDeclaration"/>
            <reference ref="LSP.GotoTypeDefinition"/>
            <separator/>
        </group>

    </actions>

    <!-- Common LSP Client actions  -->
    <actions>
        <!-- Reuse VS Code action ids while waiting for standardization of LSP commands https://github.com/microsoft/language-server-protocol/issues/788 -->
        <action id="editor.action.triggerSuggest"
                class="com.redhat.devtools.lsp4ij.commands.editor.TriggerSuggestAction"/>
        <action id="editor.action.showReferences"
                class="com.redhat.devtools.lsp4ij.commands.editor.ShowReferencesAction"/>
    </actions>

    <!-- LSP consoles -->
    <extensions defaultExtensionNs="com.intellij">

        <projectConfigurable
                groupId="language"
                id="LanguageServers"
                bundle="messages.LanguageServerBundle"
                nonDefaultProject="true"
                key="language.servers"
                instance="com.redhat.devtools.lsp4ij.settings.LanguageServerListConfigurable"/>
        <projectService
                id="com.redhat.devtools.lsp4ij.settings.UserDefinedLanguageServerSettings"
                serviceImplementation="com.redhat.devtools.lsp4ij.settings.UserDefinedLanguageServerSettings"/>
        <toolWindow
                id="Language Servers"
                anchor="bottom"
                factoryClass="com.redhat.devtools.lsp4ij.console.LSPConsoleToolWindowFactory"
                canCloseContents="false"
                icon="AllIcons.Webreferences.Server"/>

    </extensions>

    <!-- Semantic Tokens -->
    <extensions defaultExtensionNs="com.intellij">

        <!-- Semantic Tokens Inspector -->

        <projectService
                id="com.redhat.devtools.lsp4ij.features.semanticTokens.inspector.SemanticTokensInspectorManager"
                serviceImplementation="com.redhat.devtools.lsp4ij.features.semanticTokens.inspector.SemanticTokensInspectorManager"/>

        <toolWindow
                id="Semantic Tokens Inspector"
                anchor="bottom"
                factoryClass="com.redhat.devtools.lsp4ij.features.semanticTokens.inspector.SemanticTokensInspectorToolWindowFactory"
                canCloseContents="false"
                doNotActivateOnStart="true"
                icon="AllIcons.General.InspectionsEye"/>

        <!-- Color Schemes -->
        <additionalTextAttributes
                scheme="Dark"
                file="colorSchemes/SemanticTokensDark.xml"/>
        <additionalTextAttributes
                scheme="High contrast"
                file="colorSchemes/SemanticTokensHighContrast.xml"/>
        <additionalTextAttributes
                scheme="IntelliJ Light"
                file="colorSchemes/SemanticTokensIntelliJLight.xml"/>
        <additionalTextAttributes
                scheme="Light"
                file="colorSchemes/SemanticTokensLight.xml"/>
    </extensions>

    <!-- Launch configuration Language servers -->

    <actions resource-bundle="messages.LanguageServerBundle">
        <action
                id="lsp.console.explorer.restart"
                class="com.redhat.devtools.lsp4ij.console.explorer.actions.RestartServerAction"
                icon="AllIcons.Actions.Restart"/>
        <action
                id="lsp.console.explorer.stop"
                class="com.redhat.devtools.lsp4ij.console.explorer.actions.StopServerAction"
                icon="AllIcons.Actions.Suspend"/>
        <action
                id="lsp.console.explorer.pause"
                class="com.redhat.devtools.lsp4ij.console.explorer.actions.PauseServerAction"
                icon="AllIcons.Actions.Pause"/>
        <action
                id="lsp.console.explorer.copy.command"
                class="com.redhat.devtools.lsp4ij.console.explorer.actions.CopyStartServerCommandAction"
                icon="AllIcons.Actions.Copy"/>
    </actions>

    <!-- LSP link handlers -->
    <extensions defaultExtensionNs="com.intellij">
        <codeInsight.linkHandler prefix="#lsp-navigation/"
                                 handlerClass="com.redhat.devtools.lsp4ij.hint.LSPNavigationLinkHandler"/>
    </extensions>

    <!-- LSP application listeners -->
    <applicationListeners>
        <listener
                topic="com.intellij.openapi.project.ProjectManagerListener"
                class="com.redhat.devtools.lsp4ij.ConnectDocumentToLanguageServerSetupParticipant"/>
        <listener topic="com.intellij.ide.AppLifecycleListener"
                  class="com.redhat.devtools.lsp4ij.client.indexing.ProjectIndexingAppLifecycleListener" />
    </applicationListeners>

    <projectListeners>
        <listener topic="com.intellij.refactoring.listeners.RefactoringEventListener"
                  class="com.redhat.devtools.lsp4ij.features.refactoring.LSPRefactoringListener"/>
        <listener topic="com.intellij.codeInsight.lookup.LookupManagerListener"
                  class="com.redhat.devtools.lsp4ij.features.completion.LSPCompletionContributor$LSPLookupManagerListener"/>
        <listener class="com.redhat.devtools.lsp4ij.client.indexing.ProjectIndexingOnlyDumbStrategy"
                  topic="com.intellij.openapi.project.DumbService$DumbModeListener"/>
    </projectListeners>

</idea-plugin>